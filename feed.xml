<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="blog.floriansymmank.de/feed.xml" rel="self" type="application/atom+xml" /><link href="blog.floriansymmank.de/" rel="alternate" type="text/html" /><updated>2021-07-29T19:53:55+02:00</updated><id>blog.floriansymmank.de/feed.xml</id><title type="html">Irgendwas passiert hier doch</title><subtitle>Florian Symmank's blog</subtitle><author><name>Florian Symmank</name><email>FlorianSymmank@gmx.de</email></author><entry><title type="html">Sportapp Tag #2 und 3</title><link href="blog.floriansymmank.de/2021-07-29/Sportapp-entwickeln-Tag-2-und-3" rel="alternate" type="text/html" title="Sportapp Tag #2 und 3" /><published>2021-07-29T00:00:00+02:00</published><updated>2021-07-29T00:00:00+02:00</updated><id>blog.floriansymmank.de/2021-07-29/Sportapp%20entwickeln%20Tag%202%20und%203</id><content type="html" xml:base="blog.floriansymmank.de/2021-07-29/Sportapp-entwickeln-Tag-2-und-3">&lt;p&gt;Was habe ich mir da nur vorgenommen? Ohne großartige Erfahrungen im Bereich App-Entwicklung direkt ein Projekt in einer bestimmten Zeitspanne abarbeiten? Nach gefühlten Tagen YouTube Videos schauen, um überhaupt ein Gefühl dafür zu bekommen, was alles möglich ist und wie es umzusetzen wäre, habe ich nun mit dem eigentlichen Projekt begonnen.&lt;/p&gt;

&lt;p&gt;Vorweg ist es wichtig zu Wissen, wie das &lt;strong&gt;Model View ViewModel (MVVM)&lt;/strong&gt; design pattern funktioniert, da es sich durch das gesamte Projekt ziehen wird.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/AndroidAppReal/MVVMPattern.png&quot; alt=&quot;1_menuStruktur&quot; /&gt;&lt;a href=&quot;https://de.wikipedia.org/wiki/Model_View_ViewModel&quot; target=&quot;_blank&quot;&gt;Source: Wikipedia&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Das Muster wird dazu verwendet, um die Darstellung und die Geschäftslogik voneinander zu trennen, außerdem vereinfacht es die Implementation von Tests.&lt;/p&gt;

&lt;p&gt;Das &lt;strong&gt;Model&lt;/strong&gt; ist hierbei für die gesamte Geschäftslogik zuständig und enthält die Daten, die dem Nutzer angezeigt werden sollen. Beispielsweise:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Exercise&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;doSomething&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// ... &lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Im &lt;strong&gt;ViewModel&lt;/strong&gt; wird die Verbindung zwischen Model und View hergestellt, indem es dem View die benötigten Daten, Funktionen und Services (wie z. B. Datenbankzugriff) zu Verfügungen stellt. Wichtig hierbei ist, dass das ViewModel keinem View direkt zugeordnet ist. Beispielsweise:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ExercisesViewModel&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AndroidViewModel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IDatabase&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;databaseContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
     
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ExercisesViewModel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Application&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;databaseContext&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MockDatabase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getDBinstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Exercise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getAllExercisesList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;databaseContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;exerciseDAO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAllExercisesList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;insertExercise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Exercise&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exercise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;databaseContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;exerciseDAO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;insertExercise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exercise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;updateExercise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Exercise&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exercise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;databaseContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;exerciseDAO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;updateExercise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exercise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;deleteExercise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Exercise&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exercise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;databaseContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;exerciseDAO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;deleteExercise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exercise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Das &lt;strong&gt;View&lt;/strong&gt; enthält alle graphischen Elementen also das GUI und nutzt das ViewModel um die Nutzereingaben weiterzuleiten. Es enthält auch Programmlogik für das GUI. In Android Apps ist das View in eine XML und eine Java-Datei geteilt. Die XML Datei, ähnlich einer HTML, enthält die graphischen Elemente, die Java-Datei den Code-Behind Teil. Außerdem gibt es hier zwei verschiedene Wege, um ein View zu erstellen. Es gibt &lt;em&gt;Activity&lt;/em&gt; und &lt;em&gt;Fragment&lt;/em&gt; welche sich darin unterscheiden, das ein Activity aus mehreren Fragments bestehen kann also quasi Unterfenster sind.&lt;/p&gt;

&lt;p&gt;Das genutzte &lt;em&gt;constraintlayout&lt;/em&gt; kann durch Verkettung der Elemente ihre Position bestimmen. Im folgenden Beispiel XML-Teil habe ich ein paar Elemente und die Platzierung der Elemente entfernt da es sonst zu viel wäre.&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;androidx.constraintlayout.widget.ConstraintLayout&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;xmlns:android=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;xmlns:app=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.android.com/apk/res-auto&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;xmlns:tools=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.android.com/tools&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;tools:context=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;.ui.exercises.changeExerciseActivity&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;TextView&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/lblExerciseName&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Name&quot;&lt;/span&gt; 
        &lt;span class=&quot;na&quot;&gt;app:layout_constraintStart_toStartOf=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;parent&quot;&lt;/span&gt; 
        &lt;span class=&quot;na&quot;&gt;app:layout_constraintTop_toTopOf=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;parent&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- so kann Platziert werden --&amp;gt;&lt;/span&gt; 
    
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;EditText&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/etExerciseName&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:hint=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Übungsname&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:inputType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;textPersonName&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;ImageView&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/imPlaceholder&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;tools:srcCompat=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@tools:sample/avatars&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Button&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/btnNewImg&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Neues Bild\n Hinzufügen&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- restliche Elemente ... --&amp;gt;&lt;/span&gt;
    
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/androidx.constraintlayout.widget.ConstraintLayout&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Hier der Code-Behind aus der Java-Datei:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;changeExerciseActivity&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AppCompatActivity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nc&quot;&gt;Exercise&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exercise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;IDatabase&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;databaseContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;ExercisesViewModel&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exercisesViewModel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exerciseID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;setContentView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;activity_change_exercise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    	&lt;span class=&quot;n&quot;&gt;getSupportActionBar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Übung&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;getSupportActionBar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setDisplayHomeAsUpEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;exerciseID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getIntent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getIntExtra&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;exerciseID&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// finden der GUI Elemente&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;EditText&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;etExerciseName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;EditText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;findViewById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;etExerciseName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
        
        &lt;span class=&quot;n&quot;&gt;exercisesViewModel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ViewModelProvider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ExercisesViewModel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Exercise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exercises&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exercisesViewModel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAllExercisesList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Exercise&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exercises&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exerciseID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;exercise&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        
       	&lt;span class=&quot;c1&quot;&gt;// Texte der editTexts setzten&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;tExerciseName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exercise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
        
        &lt;span class=&quot;n&quot;&gt;fabDone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setOnClickListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;OnClickListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// merken der neuen Werte&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;exercise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;etExerciseName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
				&lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
                
                &lt;span class=&quot;c1&quot;&gt;// hier wird das ViewModel zum aktualisieren der Werte in der Datenbank verwendet&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exerciseID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;exercisesViewModel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;updateItems&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exercise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
                &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;exercisesViewModel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;insertItems&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exercise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

                &lt;span class=&quot;n&quot;&gt;setResult&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;RESULT_OK&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;finish&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Zurück ...&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onOptionsItemSelected&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@NonNull&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MenuItem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getItemId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;home&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;finish&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onOptionsItemSelected&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;// ... Rest des Code-Behind&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Die Kombination der beiden Dateien ergibt in etwa folgendes:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/AndroidAppReal/10_3_uebungenBeispiel.png&quot; alt=&quot;10_3_uebungenBeispiel&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;erste-erfolge&quot;&gt;Erste Erfolge&lt;/h3&gt;

&lt;p&gt;Mein erstes Ziel, eine funktionale Navigation zu implementieren wird mir dankenswerterweise dadurch erspart, dass es bereits ein Template mit einer “Navigation Drawer Activity” bereitgestellt wird.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/AndroidAppReal/1_menuStruktur.png&quot; alt=&quot;1_menuStruktur&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Allein dieses Menü besteht aus drei Dateien, die die verschiedenen Bereiche beschreiben.&lt;/p&gt;

&lt;p&gt;Nachdem das erste Ziel überraschen schnell abgearbeitet werden konnte, habe ich dazu entschieden erst einmal den “Übungsteil” der App zu erstellen, schließlich macht eine Playlist ohne Übungen wenig Sinn.&lt;/p&gt;

&lt;p&gt;Die meisten angekündigten Funktionen aus der Übungsübersicht habe ich bereits implementiert.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;img src=&quot;/assets/images/AndroidAppReal/9_uebungenUbersicht.png&quot; alt=&quot;9_uebungenUbersicht&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;/assets/images/AndroidAppReal/10_2_uebungenNeueAnlegen.png&quot; alt=&quot;10_2_uebungenNeueAnlegen&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Oben kann nach einer Übung gesucht werden, mit einem normalen Touch kommt man in den Detail-Modus eines Datensatzes und ein langer Touch löst die Nachfrage aus, ob der Datensatz gelöscht werden soll. Unten rechts ist ein sogenannter FloatingActionButton, der es ermöglicht einen neuen Datensatz anzulegen. Nur das Abspielen der Übung fehlt noch.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;img src=&quot;/assets/images/AndroidAppReal/9_uebungenUbersichtLoeschen.png&quot; alt=&quot;9_uebungenUbersichtLoeschen&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;/assets/images/AndroidAppReal/9_uebungenUbersichtSuchen.png&quot; alt=&quot;9_uebungenUbersichtSuchen&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Soviel erstmal zu meinem Fortschritt nach ca. 2,5 Tagen.&lt;/p&gt;

&lt;p&gt;Der komplette Code ist auch auf &lt;a href=&quot;https://github.com/FlorianSymmank/SportApp&quot;&gt;GitHub&lt;/a&gt; verfügbar.&lt;/p&gt;</content><author><name>Florian</name></author><category term="App_Entwicklung" /><summary type="html">Was habe ich mir da nur vorgenommen? Ohne großartige Erfahrungen im Bereich App-Entwicklung direkt ein Projekt in einer bestimmten Zeitspanne abarbeiten? Nach gefühlten Tagen YouTube Videos schauen, um überhaupt ein Gefühl dafür zu bekommen, was alles möglich ist und wie es umzusetzen wäre, habe ich nun mit dem eigentlichen Projekt begonnen.</summary></entry><entry><title type="html">Sportapp Tag #1</title><link href="blog.floriansymmank.de/2021-07-27/Sportapp-entwickeln-Tag-1" rel="alternate" type="text/html" title="Sportapp Tag #1" /><published>2021-07-27T00:00:00+02:00</published><updated>2021-07-27T00:00:00+02:00</updated><id>blog.floriansymmank.de/2021-07-27/Sportapp%20entwickeln%20Tag%201</id><content type="html" xml:base="blog.floriansymmank.de/2021-07-27/Sportapp-entwickeln-Tag-1">&lt;h2 id=&quot;ideensammlung&quot;&gt;Ideensammlung&lt;/h2&gt;

&lt;p&gt;Nach den ersten technischen Überlegungen im &lt;a href=&quot;/2021-07-26/Java-App-erstellen&quot;&gt;Post&lt;/a&gt; von gestern  bin ich nun erst einmal einen Schritt zurückgegangen und habe mir ein paar weiterführende Gedanken zum generellen Aufbau und den Funktionen, die die App am Ende haben soll, gemacht.&lt;/p&gt;

&lt;p&gt;Für die nachfolgenden Diagramme habe ich &lt;a href=&quot;https://app.diagrams.net&quot;&gt;diese&lt;/a&gt; Website verwendet.&lt;/p&gt;

&lt;h3 id=&quot;navigation&quot;&gt;Navigation&lt;/h3&gt;

&lt;p&gt;Ein wichtiges Element zur Navigation ist das Menü auf der linken Seite (in Android &lt;em&gt;Navigation Drawer&lt;/em&gt;) mit den Punkten Trainingsplaylists, Übungen, Statistik und Erinnerungen.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/AndroidApp/1_menuStruktur.png&quot; alt=&quot;1_menuStruktur&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;trainingsplaylists&quot;&gt;Trainingsplaylists&lt;/h3&gt;

&lt;p&gt;Im Menüpunkt Trainingsplaylists sollen alle angelegten Traingsplaylists, mit ein paar Infos, zur Bearbeitung und zum Starten der Playlist zu Verfügung stehen. Außerdem sollen hier auch neue Playlists angelegt werden können. Vielleicht kommt eine weitere Funktion zum Suchen einer bestimmten Playlist noch dazu.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/AndroidApp/2_playlistUebersicht.png&quot; alt=&quot;2_playlistUebersicht&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nach einem Klick oder Touch?? auf “Neue Playlist” soll ein neues Fenster erscheinen, indem der Name der Playlist angegeben werden kann. Außerdem soll es die Möglichkeit geben diese Playlist als Zeitplaylist zu markieren, später dazu mehr.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/AndroidApp/3_playlistErstellen.png&quot; alt=&quot;3_playlistErstellen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Falls der Datensatz als ganzes angeklickt wird, soll eine Übersicht der Übungen innerhalb der Playlist erscheinen. Die einzelnen Übungen sollen dabei untereinander verschoben werden können, um ihre Reihenfolge zu verändern. Außerdem soll ein weiteres Fenster zum Bearbeiten der Playlist im nachhinein existieren. Auch müssen weitere Übungen der Playlist hinzugefügt werden können.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/AndroidApp/4_playlistDetail.png&quot; alt=&quot;4_playlistDetail&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Mit einem &lt;em&gt;klick&lt;/em&gt; auf “Übung hinzufügen” wird ein Fenster geöffnet, indem Übungen gesucht werden können und auch die Voreinstellungen der Anzahl der Wiederholungen abgeändert werden können. Praktisch wäre es auch einen Button zu haben, der nach dem Speichern einer Übung ein neues Fenster zum Hinzufügen weiterer Übungen zulässt.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/AndroidApp/6_playlistUebungHinzufuegen.png&quot; alt=&quot;6_playlistUebungHinzufuegen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Hinzugefügte Übungen sollen auch im nachhinein abgeändert werden können.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/AndroidApp/5_playlistUebungDetail.png&quot; alt=&quot;5_playlistUebungDetail&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Beim Starten einer Playlist kommt die vorhin genannte &lt;em&gt;Zeitplaylist&lt;/em&gt; als alternative Option einer Playlist zum Tragen. Anders als bei einer normalen Playlist werden Übungen automatisch nach dem Ablaufen der angegebenen Zeitspanne beendet und in die Pause übergeleitet. Nach der Pause wird direkt die nächste Übung gestartet. Bei einer normalen Playlist muss nach dem Beenden einer Übung auf den Haken in der unteren rechten Ecke geklickt werden. Beim Übergang zur nächsten Übung soll eine Statistik zur abgearbeiteten Übung geführt werden. Im oberen Bereich kann zwischen den Übungen gesprungen werden, was aber nicht in der Statistik wertet wird, außer vielleicht bei übersprungenen Übungen 😅.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;img src=&quot;/assets/images/AndroidApp/7_playlistUebungdruchfuehrenAnzahl.png&quot; alt=&quot;7_playlistUebungdruchfuehrenAnzahl&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;/assets/images/AndroidApp/8_playlistUebungdruchfuehrenZeit.png&quot; alt=&quot;8_playlistUebungdruchfuehrenZeit&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;übungen&quot;&gt;Übungen&lt;/h3&gt;

&lt;p&gt;Analog zur Playlistübersicht soll es auch eine Übungsübersicht geben in der neue Übungen angelegt und alte Übungen bearbeitet werden sollen. Hier ist auch schon die Übungssuche mit eingeplant. Auch sollen einzelne Übungen von hier aus gestartet werden sollen.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/AndroidApp/9_uebungenUebersicht.png&quot; alt=&quot;9_uebungenUebersicht&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Das Anlegen und Bearbeiten von Übungen ist in großen Teilen identisch.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;img src=&quot;/assets/images/AndroidApp/10_uebungNeueAnlegen.png&quot; alt=&quot;10_uebungNeueAnlegen&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;/assets/images/AndroidApp/11_uebungBearbeiten.png&quot; alt=&quot;11_uebungBearbeiten&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;statistik&quot;&gt;Statistik&lt;/h3&gt;

&lt;p&gt;So könnte die Statistik-Seite aussehen, noch ohne den Punkt übersprungene Übungen 😐.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/AndroidApp/12_statisik.png&quot; alt=&quot;12_statisik&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;erinnerungen&quot;&gt;Erinnerungen&lt;/h3&gt;

&lt;p&gt;Relativ einfach sollen auch die Erinnerungen gestaltet werden. Zu einer gegebenen Zeit soll eine Push-Nachricht ausgelöst werden können, die direkt in die Übung/Playlist führt. Die Erinnerungen sollen auch wiederholbar sein z. B. täglich, wöchentlich, mittwochs und freitags usw.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;img src=&quot;/assets/images/AndroidApp/13_erinnerungUebersicht.png&quot; alt=&quot;13_erinnerungUebersicht&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;/assets/images/AndroidApp/14_erinnerungAnlegen.png&quot; alt=&quot;14_erinnerungAnlegen&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Heute habe ich nichts programmiert, sondern nur den Aufbau der App geplant, was länger gedauert hat länger gedauert als gedacht. Trotzdem denke ich, dass es das Wert war, da ich jetzt ein klares Bild habe welche Fenster ich benötigen werde.&lt;/p&gt;

&lt;p&gt;PS: Heute sehr weird:&lt;/p&gt;

&lt;p&gt;Am Ende eines Ganzsatzes setzt man nach Abkürzungen nur &lt;em&gt;einen&lt;/em&gt; Punkt.&lt;/p&gt;

&lt;p&gt;Beispielsweise richtig wäre: Die Wochentage sind Montag, Dienstag, Mittwoch, usw.&lt;/p&gt;

&lt;p&gt;Falsch wäre: Die Wochentage sind Montag, Dienstag, Mittwoch, usw.&lt;strong&gt;.&lt;/strong&gt;&lt;/p&gt;</content><author><name>Florian</name></author><category term="App_Entwicklung" /><summary type="html">Ideensammlung</summary></entry><entry><title type="html">Java App erstellen: Vorbereitung</title><link href="blog.floriansymmank.de/2021-07-26/Java-App-erstellen" rel="alternate" type="text/html" title="Java App erstellen: Vorbereitung" /><published>2021-07-26T00:00:00+02:00</published><updated>2021-07-26T00:00:00+02:00</updated><id>blog.floriansymmank.de/2021-07-26/Java%20App%20erstellen</id><content type="html" xml:base="blog.floriansymmank.de/2021-07-26/Java-App-erstellen">&lt;p&gt;Als erstes: Was hat sich mein Vergangenheits-Ich eigentlich dabei gedacht, im letzten Post zumindest anzudeuten, dass es vielleicht für jedes Kapitel in &lt;em&gt;New Turing Omnibus&lt;/em&gt; einen  Post geben könnte? Wahrscheinlich nicht viel oder er wollte versuchen sein zukünftiges Ich zu pushen. Wie auch immer es hat nicht geklappt.  Das Buch habe ich weitergelesen, die Übungen teilweise gemacht und keine Posts geschrieben. Eigentlich war ich sogar schon dabei einen Post über die Aufgaben zu einem Kapitel in dem es um Binärbäume (engl. Binary Tree) geht zu schreiben, habe mich aber letztlich dagegen entschieden, da ich das Gefühl hatte, dass der Code den ich geschrieben habe war nicht gut genug, um ihn zu präsentieren.&lt;/p&gt;

&lt;h2 id=&quot;überblick&quot;&gt;Überblick&lt;/h2&gt;

&lt;p&gt;Ok, nachdem das aus der Welt geschaffen wurde nun zum relevanten Teil des Posts. Ich schreibe in der Überschrift &lt;em&gt;Java App erstellen&lt;/em&gt;, was sich erst einmal nicht wirklich schwierig anhört, zu diesem Thema gibt es schließlich unzählige Tutorials im Internet, falls man aber nun eine etwas komplizierte App entwickeln möchte, als eine die nur “Hallo Welt” ausgibt muss mehr Zeit investiert werden. Was hält mich aber nun davon ab, wie die im oben genannten &lt;em&gt;New Turing Omnibus&lt;/em&gt; pro Kapitel ein Post Idee diese einfach zu verwerfen?&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Ich nehme mir die Entwicklung der App und das Schreiben der Posts fest vor (im Gegensatz zu &lt;em&gt;mal schauen&lt;/em&gt;).&lt;/li&gt;
  &lt;li&gt;Ich brauch die App, die ich Entwickeln möchte, selbst.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;was-für-eine-app-möchte-ich-also-nun-entwickeln&quot;&gt;Was für eine App möchte ich also nun Entwickeln?&lt;/h4&gt;

&lt;p&gt;Ziel ist eine App mit der ich Trainingspläne erstellen/bearbeiten/ansehen kann zu entwickeln. In den Trainingsplänen sollen verschiedene Übungen vorhanden sein (mit Beschreibung, Bildern, Anzahl der Wiederholungen/Dauer usw.) die natürlich auch erstellt, bearbeitet und angesehen werden können müssen. Außerdem soll es noch eine Statistik zu den durchgeführten Übungen und Trainingsplänen geführt werden. Schließlich möchte ich noch zu bestimmten Zeitpunkten Pop-Ups erhalten, welche mich an das geplante Training erinnern und direkt in den Trainingsplan bringt.&lt;/p&gt;

&lt;h2 id=&quot;technische-überlegungen&quot;&gt;Technische Überlegungen&lt;/h2&gt;

&lt;p&gt;Ich habe nicht die App über App-Stores öffentlich verfügbar zu machen und werde die App primär für mich entwickeln und da ich kein iPhone, iPad oder iMac besitze werde ich die App nur für Android entwickeln. Soweit ich weiß, braucht man sowieso ein Apple Gerät um Programme für andere Apple Gerät zu kompilieren, also fällt das aus diesem Grund auch aus.&lt;/p&gt;

&lt;p&gt;Eine weitere Entscheidung ist es, mit welcher Programmiersprache/Framework/IDE ich versuche die App zu entwickeln. Letztes Jahr habe ich bereits eine sehr einfache App in C# mithilfe von Xamarin für Android und IOS Geräte entwickelt. Mittlerweile ist dieses Framework veraltet bzw. hat Microsoft mit MAUI (Multi-Platform App UI) ein verbessertes Framework bereitgestellt. Ich glaube aber, dass das für meinen Anwendungszweck zu kompliziert ist, da ich sowieso nicht vorhabe, die App auf verschiedenen Betriebssystemen laufen zu lassen. Ich werde mich also für den Standardweg für App-Entwicklung auf Android verlassen und Apps mit Java (man könnte auch Kotlin benutzen, kann ich aber nicht) und Android Studio entwickeln.&lt;/p&gt;

&lt;p&gt;Zur Hilfe um mich in der App-Entwicklung zurechtzufinden, benutze ich &lt;a href=&quot;https://www.youtube.com/watch?v=fis26HvvDII&quot;&gt;dieses Tutorial&lt;/a&gt; auf dem YouTube Kanal von freeCodeCamp.org, welches keine bisherige Erfahrung im Bereich Programmierung voraussetzt.&lt;/p&gt;

&lt;h2 id=&quot;einrichten-der-ide-und-technische-probleme&quot;&gt;Einrichten der IDE und technische Probleme&lt;/h2&gt;

&lt;p&gt;Das Einrichten der Programme funktioniert grundsätzlich wie im Video gezeigt, aber ein paar kleine Probleme sind bei mir dennoch aufgetaucht.&lt;/p&gt;

&lt;p&gt;Bereits bei der Installation von Android Studio erschein bei mir diese Fehlermeldung in Verbindung mit dem Hardware Accelerated Execution Manager (HAXM) von Intel um virtuelle Geräte schneller ausführen zu können:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;This computer does not support Intel Virtualization Technology (VT-x) or it is being exclusively used by Hyper-V. HAXM cannot be installed. 
Please ensure Hyper-V is disabled in Windows Features, or refer to the Intel HAXM documentation for more information.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Der normale Weg diesen Fehler zu beheben wäre es in den Windows-Features Hyper-V zu deaktivieren. Diese Option gibt es bei mir nicht, da ich Windows 10 Home habe. Schlussendlich habe ich den Befehl &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bcdedit /set hypervisorlaunchtype off&lt;/code&gt; zum Deaktivieren von Hyper-V gefunden und siehe da es funktioniert.&lt;/p&gt;

&lt;p&gt;Um zu überprüfen, ob HAXM wirklich installiert ist kann &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sc query intelhaxm&lt;/code&gt; genutzt werden. Bei der Ausgabe ist der State wichtig, wenn HAXM installiert ist und läuft muss dort 4  RUNNING stehen.&lt;/p&gt;

&lt;p&gt;Mein zweites Problem ist &lt;em&gt;wahrscheinlich&lt;/em&gt; nur temporär: Android Studio beim Erstellen der Anwendung:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Installed Build Tools revision 31.0.0 is corrupted. Remove and install again using the SDK Manager.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/a/68430992&quot;&gt;Hierbei müssen zwei Dateien im Ordner des Buildtools 31.0.0 umbenannt werden&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Drittes und letztes kleines Problem wieder beim Erstellen, obwohl ich ein vorbereitetes Template verwende:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Manifest merger failed : Apps targeting Android 12 and higher are required to specify an explicit value for `android:exported` when the corresponding component has an intent filter defined. See https://developer.android.com/guide/topics/manifest/activity-element#exported for details.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Einfache Lösung: In der AndroidManifest.xml Datei ein &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;android:exported=&quot;true&quot;&lt;/code&gt; zu der einzigen bereits vorhandenen activity hinzugefügen.&lt;/p&gt;

&lt;p&gt;Ansonsten läuft alles reibungslos. Ich gehe davon aus, dass ich in einer Woche bis 10 Tagen mit dem Projekt fertig bin. Bis dahin kommt zu jedem Fortschritt ein Blogpost Update.&lt;/p&gt;

&lt;p&gt;PS: komplett unrelatiert [WIN] + [V] öffnet den Clipboard Verlauf 😀&lt;/p&gt;</content><author><name>Florian</name></author><category term="Java" /><category term="App_Entwicklung" /><summary type="html">Als erstes: Was hat sich mein Vergangenheits-Ich eigentlich dabei gedacht, im letzten Post zumindest anzudeuten, dass es vielleicht für jedes Kapitel in New Turing Omnibus einen Post geben könnte? Wahrscheinlich nicht viel oder er wollte versuchen sein zukünftiges Ich zu pushen. Wie auch immer es hat nicht geklappt. Das Buch habe ich weitergelesen, die Übungen teilweise gemacht und keine Posts geschrieben. Eigentlich war ich sogar schon dabei einen Post über die Aufgaben zu einem Kapitel in dem es um Binärbäume (engl. Binary Tree) geht zu schreiben, habe mich aber letztlich dagegen entschieden, da ich das Gefühl hatte, dass der Code den ich geschrieben habe war nicht gut genug, um ihn zu präsentieren.</summary></entry><entry><title type="html">New Turing Omnibus</title><link href="blog.floriansymmank.de/2021-06-07/New-Turing-Omnibus" rel="alternate" type="text/html" title="New Turing Omnibus" /><published>2021-06-07T00:00:00+02:00</published><updated>2021-06-07T00:00:00+02:00</updated><id>blog.floriansymmank.de/2021-06-07/New%20Turing%20Omnibus</id><content type="html" xml:base="blog.floriansymmank.de/2021-06-07/New-Turing-Omnibus">&lt;p&gt;Ich benutze diesen Post dafür, um mich ein bisschen mit Markdown (den Jekyll kann Markdown automatisch in Html umwandeln) vertraut zu machen. Ziel ist es Bilder und Codeausschnitte einzufügen.&lt;/p&gt;

&lt;h2 id=&quot;new-turing-omnibus&quot;&gt;New Turing Omnibus&lt;/h2&gt;

&lt;p&gt;Auf Empfehlung meines Mathematik Dozenten habe ich mir vor zwei Wochen &lt;em&gt;New Turing Omnibus&lt;/em&gt; von &lt;em&gt;Dewdney&lt;/em&gt; besorgt. Gestern nahm ich das Buch das erste Mal in die Hand und wurde am Ende des ersten Kapitels &lt;em&gt;Algorithms&lt;/em&gt; dazu aufgefordert zwei Probleme zu lösen. Das war auch weiterer Grund diesen Blog zu anzufangen. Der Blog liefert mir einen Grund, Dinge genauer zu betrachteten um sie danach selbst wiedergeben zu können.&lt;/p&gt;

&lt;h3 id=&quot;problem-1-ein-rezept-als-algorithmus-wiedergeben&quot;&gt;Problem 1: Ein Rezept als Algorithmus wiedergeben&lt;/h3&gt;

&lt;p&gt;Eigentlich denkt man es wäre einfach ein Rezept so wiederzugeben, dass jemand durch diesen Algorithmus, denn ein Rezept ist nichts anderes als ein Algorithmus, genau das gleiche Ergebnis erhält, falls er sich penibel an die Anweisungen hält, wenn er/sie versucht es nachzukochen (ziemlich viele Kommas, Sorry, hatte angekündigt holprig zu sein).&lt;/p&gt;

&lt;p&gt;Ich versuche im Nachfolgenden nun ein Rezept zum Kochen eines vegetarischen Nudelauflaufs möglichst genau wiederzugeben. (Bild wird vielleicht nachgereicht.)&lt;/p&gt;

&lt;p&gt;Als Zutaten benötigen wir:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;500 g Penne Rigate aus Hartweizengrieß&lt;/p&gt;

    &lt;p&gt;Hier fängt es schon an. Wie genau muss man sein? Reicht es anzugeben 500 g Nudeln zu benötigen oder müsste man 500 g Penne Rigate aus Hartweizengrieß und die Marke nenne? Am Ende wird kaum einen Unterschied machen, trotzdem gleich wäre es nicht falls 500g Spagetti Nudeln verwendet werden, aber 500 g Penne Rigate aus Hartweizengrieß gefordert wurde.&lt;/p&gt;

    &lt;p&gt;Im folgenden werde ich mich darauf beschränken die Menge und den Namen der benötigten Lebensmittel zu nennen (also ohne Marke) . Falls es nötig ist eine spezifischere Angabe zu machen wird sie genannt (z.B.: Nudel wird Penne Rigate).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;800 g gehackte Tomaten&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;200 g Mozzarella&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;1 Zwiebel&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;2 Zehen Knoblauch&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;1 Becher Sahne (200 g)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;100 g Parmesan&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;400 g Tomaten&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;2 l Wasser&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;2 EL Olivenöl&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Benötigte Requisiten:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Schneidemesser&lt;/li&gt;
  &lt;li&gt;Knoblauchpresse&lt;/li&gt;
  &lt;li&gt;Schneidebrett&lt;/li&gt;
  &lt;li&gt;2 Töpfe&lt;/li&gt;
  &lt;li&gt;Käsereibe&lt;/li&gt;
  &lt;li&gt;Auflaufform&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nun zum eigentlichen Rezept:&lt;/p&gt;

&lt;ul class=&quot;task-list&quot;&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;Ofen auf 200 °C vorheizen&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Die folgenden 2 Listen können parallel abgearbeitet werden.&lt;/em&gt;&lt;/p&gt;

&lt;ul class=&quot;task-list&quot;&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;
    &lt;p&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;Topf mit 2 Litern Wasser füllen, salzen&lt;/p&gt;
  &lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;
    &lt;p&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;gefüllten Topf auf den Herd stellen, Deckel draufmachen&lt;/p&gt;
  &lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;
    &lt;p&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;den auf dem Herd stehenden Topf erhitzen und das Wasser zum kochen bringen&lt;/p&gt;
  &lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;
    &lt;p&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;gelegentlich umrühren&lt;/p&gt;
  &lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;
    &lt;p&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;Deckel vom Topf nehmen&lt;/p&gt;
  &lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;
    &lt;p&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;Nudeln ins kochenden Wasser geben&lt;/p&gt;
  &lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;
    &lt;p&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;Nudeln 10 Minuten Kochen lassen&lt;/p&gt;
  &lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;
    &lt;p&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;Hitze entfernen&lt;/p&gt;
  &lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;
    &lt;p&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;Wasser abgießen&lt;/p&gt;
  &lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;
    &lt;p&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;auf einem Schneidbrett Zwiebel schälen und Knoblauch zerkleinern&lt;/p&gt;
  &lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;
    &lt;p&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;die Zwiebel und den Knoblauch in zweiten Topf geben&lt;/p&gt;
  &lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;
    &lt;p&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;zweiten Topf erhitzen&lt;/p&gt;
  &lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;
    &lt;p&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;zweiten Topf die Zwiebel und den (beide Zehen) Knoblauch mithilfe von 2 EL Olivenöl anbraten&lt;/p&gt;
  &lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;
    &lt;p&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;800 g gehackten Tomaten in den zweiten Topf geben&lt;/p&gt;
  &lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;
    &lt;p&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;gelegentlich umrühren&lt;/p&gt;
  &lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;
    &lt;p&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;zweiten Topf 4 min köcheln lassen&lt;/p&gt;
  &lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;
    &lt;p&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;Hitze entfernen&lt;/p&gt;
  &lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;
    &lt;p&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;den Becher Sahne hinzufügen&lt;/p&gt;
  &lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;
    &lt;p&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;100 g Parmesan mithilfe der Käsereibe in den zweiten Topf reiben&lt;/p&gt;
  &lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;
    &lt;p&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;400 g Tomaten auf dem Schneidebrett kleinschneiden (halbieren oder vierteln je nach Größe)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;
    &lt;p&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;vermengen&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sind beide Listen abgearbeitet kann mit der nächsten Liste begonnen werden.&lt;/p&gt;

&lt;ul class=&quot;task-list&quot;&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;Inhalt des Nudeltopfs in den zweiten Topf geben und vermengen&lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;Inhalt des zweiten Topfs in die Auflaufform geben&lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;200 g Mozzarella auf Schneidbrett in Scheiben schneiden&lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;Mozzarella auf der Nudel-Tomatenmenge verteilen&lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;Auflaufform in den Ofen stellen&lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;20 Minuten auf mittlerer Schiene backen lassen&lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;Hitze entfernen&lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;Auflaufform aus dem Ofen nehmen und auf das Schneidebrett stellen&lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;Auflauf 10 Minuten abkühlen lassen&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Fertig! (Das aufschreiben hat länger gedauert als es zu Kochen)&lt;/p&gt;

&lt;p&gt;Ich hoffe ich habe nichts vergessen (unwahrscheinlich).&lt;/p&gt;

&lt;p&gt;Gleichzeitig habe ich hiermit das so ziemlich einzige Rezept aufgeschrieben welches ich kann.&lt;/p&gt;

&lt;h3 id=&quot;problem-2-ein-gegebenen-algorithmus-erweitern&quot;&gt;Problem 2: Ein gegebenen Algorithmus erweitern&lt;/h3&gt;

&lt;p&gt;Der im Buch gegebene Algorithmus erzeugt Wallpaper aus einem sich immer wiederholenden Muster. Hier ist der Psudocode:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-pseudocode&quot;&gt;input corna, cornb
input side
for i ← 1 to 100
	for j ← 1 to 100
		x ← corna + i * side / 100
		y ← cornb + i * side / 100
		c ← int(x²+y²)
		if c even
			then plot(i,j)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Die Aufgabe war nun diesen Algorithmus so zu erweitern, das drei anstelle von zwei Farben verwendet werden. Ich habe mich dazu entschieden die Aufgabe mit C# zu lösen, da ich damit aktuell zumindest am besten zurechtkomme und denke hiermit viele verschiedene Probleme schnell lösen zu können. Im Informatik-Studium haben wir in den letzten Semestern mit Java und C kennengelernt, privat habe ich mir Python angesehen. In Java bin ich mittlerweile auch einigermaßen gut.&lt;/p&gt;

&lt;div class=&quot;language-c# highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// using System;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// using System.Drawing;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// using System.Drawing.Imaging;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Random&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rnd&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// new Random()&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// breite und höhe des Bildes&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Image&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Bitmap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;corna&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// zufälliger wert von 0 bis &amp;lt; 1000&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cornb&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;side&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Graphics&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gfx&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Graphics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;FromImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            
        	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;corna&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;side&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
         	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cornb&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;side&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
         	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;// c % 3, gibt den Rest aus der Divison c / 3 zurück, bspw. 4 % 3 = 1 (4 / 3 = 1 Rest 1)&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;SolidBrush&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;brush&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SolidBrush&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
				&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SolidBrush&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;White&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SolidBrush&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Gray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// default&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
            
			&lt;span class=&quot;n&quot;&gt;gfx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;FillRectangle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;brush&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;$&quot;wallpaper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corna&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cornb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;side&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;.Png&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ImageFormat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Png&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Zugegeben der Code brauch zumindest bei mir ziemlich lange bei der Ausführung.&lt;/p&gt;

&lt;p&gt;Hier ein paar Ergebnisse. Mit dem Werten corna=98,  cornb=531, side=505 wird dieses Bild generiert.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/wallpaper98_531_505.Png&quot; alt=&quot;wallpaper98_531_505.Png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;corna=677,  cornb=411, side=577&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/wallpaper677_411_577.Png&quot; alt=&quot;wallpaper677_411_577.Png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Damit bin ich auch schon am Ende des Posts angelangt. Mal schauen, wann ich das nächste mal Poste oder ob ich für jedes Kapitel einen Post mache 😬.&lt;/p&gt;

&lt;p&gt;Danke fürs Lesen!&lt;/p&gt;

&lt;p&gt;PS: auch eher für mich: “```” macht den Codebereich in Markdown auf.&lt;/p&gt;</content><author><name>Florian</name></author><category term="New_Turing_Omnibus" /><category term="Rezept" /><summary type="html">Ich benutze diesen Post dafür, um mich ein bisschen mit Markdown (den Jekyll kann Markdown automatisch in Html umwandeln) vertraut zu machen. Ziel ist es Bilder und Codeausschnitte einzufügen.</summary></entry><entry><title type="html">Warum überhaupt</title><link href="blog.floriansymmank.de/2021-06-07/Warum" rel="alternate" type="text/html" title="Warum überhaupt" /><published>2021-06-07T00:00:00+02:00</published><updated>2021-06-07T00:00:00+02:00</updated><id>blog.floriansymmank.de/2021-06-07/Warum</id><content type="html" xml:base="blog.floriansymmank.de/2021-06-07/Warum">&lt;p&gt;Aktuell studiere ich Angewandte Informatik an der HTW-Berlin im 2. Semester und bin 23 Jahre alt (glaube ich). Eigentlich sollte ich grade wahrscheinlich Mathematik lernen oder einen Vortrag in Englisch vorbereiten, dass hört sich aber nicht grade spannend an. Da man aber nicht von prokrastinieren reden kann, wenn man etwas fachlich bezogenes macht und schon länger die Idee hatte einen Blog zu schreiben, fange ich jetzt damit an. Dank geht raus an Sebi der mit seinem &lt;a href=&quot;https://blog.sebastianreimer.com/&quot;&gt;Blog&lt;/a&gt; mich nun schlussendlich dazu bewegt hat anzufangen. Bisher habe ich keine Erfahrung mit dem Schreiben von Texten, von daher werden die ersten Texte eher holprig werden, stay with me.&lt;/p&gt;

&lt;p&gt;Ich habe nicht vor regelmäßig etwas zu verfassen, soll aber nicht heißen, dass nichts gepostet wird, eben nur wenn ich Lust habe. Die Themen werden sich wahrscheinlich rund um das Informatik-Studium drehen.&lt;/p&gt;

&lt;h2 id=&quot;kontakt&quot;&gt;Kontakt&lt;/h2&gt;

&lt;p&gt;Erreichbar über: &lt;a href=&quot;mailto:FlorianSymmank@gmx.de&quot;&gt;FlorianSymmank@gmx.de&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;GitHub: &lt;a href=&quot;https://github.com/FlorianSymmank&quot;&gt;https://github.com/FlorianSymmank&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;technisches&quot;&gt;Technisches&lt;/h2&gt;

&lt;p&gt;Auf der Suche danach wie das ganze möglichst kostengünstig umsetzten werden kann (und WordPress Mainstream ist), bin ich auf &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; in Verbindung mit GitHub Pages gestoßen. Jekyll ist ein &lt;em&gt;einfacher, blog-fähiger, statischer Site-Generator&lt;/em&gt;, der aus verschiedenen Vorlagen und den dazugehörigen Posts statische HTML Seiten erstellen kann, dadurch kann eine Datenbank eingespart werden. Als Host wird GitHub Pages verwendet, denn dieser lässt Websites kostenfrei hosten. Da ich keine Lust habe mich großartig mit dem Layout einer Webseite auseinanderzusetzen (und anscheinend viele andere auch nicht, sonst gäbe es nicht zig Jekyll themes) habe ich nach einem minimalistischen Jekyll Theme gesucht und bin auf &lt;strong&gt;&lt;a href=&quot;https://github.com/chesterhow/tale&quot;&gt;Tale&lt;/a&gt;&lt;/strong&gt; von &lt;a href=&quot;https://github.com/chesterhow&quot;&gt;Chester How&lt;/a&gt; gestoßen.&lt;/p&gt;

&lt;p&gt;Danke fürs Lesen!&lt;/p&gt;

&lt;p&gt;PS: kann ich Emotes verwenden🙃? (auf Windows: [Win] + [Punkt])&lt;/p&gt;

&lt;p&gt;Dieser Post ist gleichzeitig die About-Seite.&lt;/p&gt;</content><author><name>Florian</name></author><category term="Intro" /><category term="About" /><summary type="html">Aktuell studiere ich Angewandte Informatik an der HTW-Berlin im 2. Semester und bin 23 Jahre alt (glaube ich). Eigentlich sollte ich grade wahrscheinlich Mathematik lernen oder einen Vortrag in Englisch vorbereiten, dass hört sich aber nicht grade spannend an. Da man aber nicht von prokrastinieren reden kann, wenn man etwas fachlich bezogenes macht und schon länger die Idee hatte einen Blog zu schreiben, fange ich jetzt damit an. Dank geht raus an Sebi der mit seinem Blog mich nun schlussendlich dazu bewegt hat anzufangen. Bisher habe ich keine Erfahrung mit dem Schreiben von Texten, von daher werden die ersten Texte eher holprig werden, stay with me.</summary></entry></feed>